/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 18 10:11:44 GMT 2022
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.jupiter.api.extension.RegisterExtension;
import sg.edu.nus.comp.cs4218.impl.app.WcApplication;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class WcApplication_ESTest extends WcApplication_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(WcApplication_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[7];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Boolean boolean0 = Boolean.TRUE;
      WcApplication wcApplication0 = new WcApplication();
      String[] stringArray0 = new String[8];
      stringArray0[0] = "";
      stringArray0[1] = "f6";
      stringArray0[2] = "-";
      stringArray0[3] = "";
      stringArray0[4] = "";
      stringArray0[5] = "-";
      stringArray0[6] = "";
      stringArray0[7] = "-";
      String string0 = wcApplication0.countFromFileAndStdin(boolean0, boolean0, boolean0, dataInputStream0, stringArray0);
      assertEquals("wc: : Is a directory\n       0       0       0 \nwc: f6: No such file or directory\n       0       0       0 -\nwc: : Is a directory\n       0       0       0 \nwc: : Is a directory\n       0       0       0 \n       0       0       0 -\nwc: : Is a directory\n       0       0       0 \n       0       0       0 -\n       0       0       0 total", string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test01()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      byte[] byteArray0 = new byte[6];
      byteArray0[0] = (byte)32;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      long[] longArray0 = wcApplication0.getCountReport(byteArrayInputStream0);
      assertArrayEquals(new long[] {0L, 1L, 6L}, longArray0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test02()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      byte[] byteArray0 = new byte[7];
      byteArray0[1] = (byte)10;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      long[] longArray0 = wcApplication0.getCountReport(byteArrayInputStream0);
      assertArrayEquals(new long[] {1L, 2L, 7L}, longArray0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test03()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      try { 
        wcApplication0.getCountReport((InputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // wc: Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      WcApplication wcApplication0 = new WcApplication();
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.valueOf("");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-";
      stringArray0[1] = "-";
      stringArray0[2] = "";
      String string0 = wcApplication0.countFromFileAndStdin(boolean0, boolean1, boolean1, dataInputStream0, stringArray0);
      assertEquals("       0 -\n       0 -\nwc: : Is a directory\n       0       0       0 \n       0 total", string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 467, (byte)0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.valueOf("");
      WcApplication wcApplication0 = new WcApplication();
      String[] stringArray0 = new String[1];
      wcApplication0.countFromStdin(boolean1, boolean1, boolean1, dataInputStream0);
      stringArray0[0] = "";
      String string0 = wcApplication0.countFromFileAndStdin(boolean1, boolean1, boolean0, dataInputStream0, stringArray0);
      assertEquals("\nwc: : Is a directory\n       0       0       0 ", string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test06()  throws Throwable  {
      Boolean boolean0 = Boolean.valueOf((String) null);
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      WcApplication wcApplication0 = new WcApplication();
      try { 
        wcApplication0.countFromFileAndStdin((Boolean) null, boolean0, boolean0, pipedInputStream0, (String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // wc: Null Files
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test07()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(10);
      MockPrintStream mockPrintStream0 = new MockPrintStream(byteArrayOutputStream0);
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      stringArray0[1] = "Nl4OXi?%%";
      stringArray0[2] = "";
      stringArray0[3] = "-";
      stringArray0[4] = "";
      stringArray0[5] = "Nl4OXi?%%";
      stringArray0[6] = "";
      stringArray0[7] = "Nl4OXi?%%";
      stringArray0[8] = "Nl4OXi?%%";
      try { 
        wcApplication0.run(stringArray0, (InputStream) null, mockPrintStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // wc: Exception Caught
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test08()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (byte)0, (byte)0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      WcApplication wcApplication0 = new WcApplication();
      Boolean boolean0 = Boolean.valueOf("-");
      String[] stringArray0 = new String[3];
      stringArray0[0] = "-";
      try { 
        wcApplication0.countFromFileAndStdin(boolean0, boolean0, boolean0, dataInputStream0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test09()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(10);
      DataOutputStream dataOutputStream0 = new DataOutputStream(byteArrayOutputStream0);
      String[] stringArray0 = new String[0];
      try { 
        wcApplication0.run(stringArray0, (InputStream) null, dataOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // wc: Exception Caught
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test10()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      Boolean boolean0 = Boolean.FALSE;
      String[] stringArray0 = new String[3];
      stringArray0[0] = "L.f";
      stringArray0[1] = "L.f";
      stringArray0[2] = "L.f";
      String string0 = wcApplication0.countFromFiles(boolean0, boolean0, boolean0, stringArray0);
      assertEquals("wc: L.f: No such file or directory\nwc: L.f: No such file or directory\nwc: L.f: No such file or directory\n total", string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test11()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      Boolean boolean0 = Boolean.TRUE;
      try { 
        wcApplication0.countFromFiles(boolean0, boolean0, boolean0, (String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // wc: Null Files
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test12()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      MockFile mockFile0 = new MockFile("sg.edu.nus.comp.cs4218.impl.app.WcApplication$Result");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream(mockFile0, false);
      wcApplication0.run(stringArray0, (InputStream) null, mockFileOutputStream0);
      assertEquals(47L, mockFile0.length());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test13()  throws Throwable  {
      WcApplication wcApplication0 = new WcApplication();
      String[] stringArray0 = new String[3];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        wcApplication0.run(stringArray0, pipedInputStream0, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // wc: Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.WcApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test14()  throws Throwable  {
      WcApplication.Result wcApplication_Result0 = new WcApplication.Result();
      wcApplication_Result0.getErrorCode();
      assertFalse(wcApplication_Result0.isErroneous());
  }
}
