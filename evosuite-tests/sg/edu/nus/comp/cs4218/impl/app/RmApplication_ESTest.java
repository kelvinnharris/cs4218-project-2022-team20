/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 18 10:05:02 GMT 2022
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.jupiter.api.extension.RegisterExtension;
import sg.edu.nus.comp.cs4218.impl.app.RmApplication;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class RmApplication_ESTest extends RmApplication_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(RmApplication_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      MockFile mockFile0 = new MockFile("", "");
      // Undeclared exception!
      try { 
        rmApplication0.removeFile(mockFile0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.vfs.FSObject", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      Boolean boolean0 = Boolean.TRUE;
      Boolean boolean1 = Boolean.FALSE;
      String[] stringArray0 = new String[9];
      stringArray0[0] = "";
      try { 
        rmApplication0.remove(boolean0, boolean1, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cannot remove '': Directory not empty
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          RmApplication rmApplication0 = new RmApplication();
          String[] stringArray0 = new String[3];
          stringArray0[0] = "";
          Boolean boolean0 = Boolean.TRUE;
          try { 
            rmApplication0.remove(boolean0, boolean0, stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"java.io.FilePermission\" \"/Users/sacchirro/Computer/nus/cs4218/cs4218-project-2022-team20/evosuite-tests/sg/edu/nus/comp/cs4218/impl/app/CatApplication_ESTest_scaffolding.java\" \"delete\")
             // java.base/java.lang.Thread.getStackTrace(Thread.java:1598)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:424)
             // java.base/java.lang.SecurityManager.checkDelete(SecurityManager.java:866)
             // java.base/java.io.File.delete(File.java:1051)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.removeFile(RmApplication.java:104)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.removeFile(RmApplication.java:101)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.removeFile(RmApplication.java:101)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.removeFile(RmApplication.java:101)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.removeFile(RmApplication.java:101)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.removeFile(RmApplication.java:101)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.removeFile(RmApplication.java:101)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.removeFile(RmApplication.java:101)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.removeFile(RmApplication.java:101)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.removeFile(RmApplication.java:101)
             // sg.edu.nus.comp.cs4218.impl.app.RmApplication.remove(RmApplication.java:70)
             // jdk.internal.reflect.GeneratedMethodAccessor51.invoke(Unknown Source)
             // java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.base/java.lang.reflect.Method.invoke(Method.java:564)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:256)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:165)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:219)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:286)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:192)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:49)
             // java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
             // java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
             // java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
             // java.base/java.lang.Thread.run(Thread.java:832)
             //
             verifyException("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      Boolean boolean0 = Boolean.FALSE;
      String[] stringArray0 = new String[20];
      stringArray0[0] = "l3";
      try { 
        rmApplication0.remove(boolean0, boolean0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test4()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      String[] stringArray0 = new String[3];
      stringArray0[0] = "";
      Boolean boolean0 = Boolean.FALSE;
      try { 
        rmApplication0.remove(boolean0, boolean0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cannot remove '': Is a directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test5()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      Boolean boolean0 = Boolean.FALSE;
      try { 
        rmApplication0.remove(boolean0, boolean0, (String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test6()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      String[] stringArray0 = new String[6];
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      try { 
        rmApplication0.run(stringArray0, pipedInputStream0, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // rm: Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.RmApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test7()  throws Throwable  {
      RmApplication rmApplication0 = new RmApplication();
      String[] stringArray0 = new String[0];
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      rmApplication0.run(stringArray0, (InputStream) null, pipedOutputStream0);
      assertEquals(0, stringArray0.length);
  }
}
