/*
 * This file was automatically generated by EvoSuite
 * Fri Mar 18 10:06:57 GMT 2022
 */

package sg.edu.nus.comp.cs4218.impl.app;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import org.junit.jupiter.api.Timeout;
import java.util.concurrent.TimeUnit;
import static org.evosuite.runtime.EvoAssertions.*;
import java.io.BufferedOutputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import org.evosuite.runtime.EvoRunnerJUnit5;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.jupiter.api.extension.RegisterExtension;
import sg.edu.nus.comp.cs4218.impl.app.SortApplication;

@EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = false)
public class SortApplication_ESTest extends SortApplication_ESTest_scaffolding {
@RegisterExtension
  static EvoRunnerJUnit5 runner = new EvoRunnerJUnit5(SortApplication_ESTest.class);

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test0()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = Boolean.TRUE;
      String[] stringArray0 = new String[0];
      String string0 = sortApplication0.sortFromFiles(boolean0, boolean0, boolean0, stringArray0);
      assertEquals("", string0);
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test1()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      String[] stringArray0 = new String[0];
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      try { 
        sortApplication0.run(stringArray0, (InputStream) null, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // sort: Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test2()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      Boolean boolean0 = Boolean.TRUE;
      String[] stringArray0 = new String[1];
      stringArray0[0] = "os.name";
      try { 
        sortApplication0.sortFromFiles(boolean0, boolean0, boolean0, stringArray0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // cannot read: os.name: No such file or directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test3()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      try { 
        sortApplication0.sortFromFiles((Boolean) null, (Boolean) null, (Boolean) null, (String[]) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Null arguments
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test4()  throws Throwable  {
      String[] stringArray0 = new String[0];
      SortApplication sortApplication0 = new SortApplication();
      byte[] byteArray0 = new byte[0];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-338), (-338));
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      sortApplication0.run(stringArray0, byteArrayInputStream0, byteArrayOutputStream0);
      assertEquals(0, byteArrayOutputStream0.size());
      assertEquals("", byteArrayOutputStream0.toString());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test5()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      String[] stringArray0 = new String[0];
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 4, (byte)9);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      BufferedOutputStream bufferedOutputStream0 = new BufferedOutputStream(pipedOutputStream0, (byte)7);
      sortApplication0.run(stringArray0, byteArrayInputStream0, bufferedOutputStream0);
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test6()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      try { 
        sortApplication0.run(stringArray0, pipedInputStream0, pipedOutputStream0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // sort: read failed: : Is a directory
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }

  @Test
  @Timeout(value = 4000 , unit = TimeUnit.MILLISECONDS)
  public void test7()  throws Throwable  {
      SortApplication sortApplication0 = new SortApplication();
      try { 
        sortApplication0.run((String[]) null, (InputStream) null, (OutputStream) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // sort: Null Pointer Exception
         //
         verifyException("sg.edu.nus.comp.cs4218.impl.app.SortApplication", e);
      }
  }
}
